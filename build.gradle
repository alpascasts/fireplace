buildscript {
    ext.kotlin_version = '1.3.61'
    ext.ktorm_version = '2.6.1'
    ext.alpas_version = '0.15.4'
}

plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

startScripts {
    applicationName = 'fireplace'
}

mainClassName = 'dev.alpas.fireplace.StartKt'

group 'dev.alpas.fireplace'
version '0.3.0'

repositories {
    jcenter()
    maven { url = uri("https://jitpack.io") }
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha5'
    implementation 'mysql:mysql-connector-java:5.1.46'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "dev.alpas:framework:$alpas_version"
    testImplementation "dev.alpas:pulsar:$alpas_version"
    // Prepend the latest SHA to try out the latest Alpas version
    // implementation 'com.github.alpas:alpas:'
    // testImplementation 'com.github.alpas.alpas:pulsar:'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "9"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "9"
}

jar {
    manifest {
        attributes 'Main-Class': 'dev.alpas.fireplace.StartKt'
    }
}

def javaVersion = JavaVersion.VERSION_1_9;

task enforceVersion() {
    def foundVersion = JavaVersion.current();
    if (foundVersion != javaVersion)
        throw new IllegalStateException("Unsupported Java version ${foundVersion}. Minimum Java version ${javaVersion} is required.")
}

shadowJar {
    destinationDirectory = file("./")
    archiveBaseName.set('fireplace')
    archiveClassifier.set(null)
    version = null
}

compileJava.dependsOn(enforceVersion)

test {
    useJUnitPlatform()
}

installDist {
    destinationDir = file("./build/install/fireplace")
}


//apply from: 'dev.gradle'
